# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    branches:
      - 'release/**'
jobs:
  deploy:

    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v2
    - name: Set major release
      if: ${{ github.event.label.name == 'release-major' }}
      run: echo "RELEASE=major" >> $GITHUB_ENV
    - name: Set minor release
      if: ${{ github.event.label.name == 'release-minor' }}
      run: echo "RELEASE=minor" >> $GITHUB_ENV
    - name: Set patch release
      if: ${{ github.event.label.name == 'release-patch' }}
      run: echo "RELEASE=patch" >> $GITHUB_ENV
    - name: Check release env
      run: |
        if [[ -z "${{ env.RELEASE }}" ]];
        then
          echo "You need to set a release label on PRs to the main branch"
          exit 1
        else
          exit 0
        fi
    - name: Tagging
      uses: rymndhng/release-on-push-action@master
      with:
        bump_version_scheme: ${{ env.RELEASE }}
        use_github_release_notes: true
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

